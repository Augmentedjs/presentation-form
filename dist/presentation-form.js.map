{"version":3,"sources":["webpack://presentation-form/webpack/universalModuleDefinition","webpack://presentation-form/webpack/bootstrap","webpack://presentation-form/./src/functions/buildForm.js","webpack://presentation-form/./src/index.js","webpack://presentation-form/./src/autoForm.js","webpack://presentation-form/external {\"commonjs\":\"next-core-utilities\",\"commonjs2\":\"next-core-utilities\",\"amd\":\"next-core-utilities\",\"root\":\"next-core-utilities\"}","webpack://presentation-form/external {\"commonjs\":\"presentation-decorator\",\"commonjs2\":\"presentation-decorator\",\"amd\":\"presentation-decorator\",\"root\":\"presentation-decorator\"}","webpack://presentation-form/external {\"commonjs\":\"presentation-request\",\"commonjs2\":\"presentation-request\",\"amd\":\"presentation-request\",\"root\":\"presentation-request\"}","webpack://presentation-form/external {\"commonjs\":\"presentation-models\",\"commonjs2\":\"presentation-models\",\"amd\":\"presentation-models\",\"root\":\"presentation-models\"}","webpack://presentation-form/external {\"commonjs\":\"presentation-dom\",\"commonjs2\":\"presentation-dom\",\"amd\":\"presentation-dom\",\"root\":\"presentation-dom\"}","webpack://presentation-form/external {\"commonjs\":\"presentation-widget\",\"commonjs2\":\"presentation-widget\",\"amd\":\"presentation-widget\",\"root\":\"presentation-widget\"}","webpack://presentation-form/./src/functions/messages.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","legacy","large","form","document","fs","keys","display","styles","style","lg","att","displayCol","container","css","req","required","lb","fields","input","Widget","model","reset","binding","submit","AutomaticForm","formCompile","DecoratorView","constructor","options","super","Model","isObject","parsedSchema","JSON","console","schema","description","_retrieveSchema","uri","that","request","url","contentType","dataType","success","data","status","error","setURI","setSchema","showProgressBar","show","e","Dom","showMessage","message","validate","messages","isValid","render","_formEl","populate","remove","html","ii","ll"],"mappings":"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","file":"presentation-form.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"next-core-utilities\"), require(\"presentation-decorator\"), require(\"presentation-request\"), require(\"presentation-models\"), require(\"presentation-dom\"), require(\"presentation-widget\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"presentation-form\", [\"next-core-utilities\", \"presentation-decorator\", \"presentation-request\", \"presentation-models\", \"presentation-dom\", \"presentation-widget\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"presentation-form\"] = factory(require(\"next-core-utilities\"), require(\"presentation-decorator\"), require(\"presentation-request\"), require(\"presentation-models\"), require(\"presentation-dom\"), require(\"presentation-widget\"));\n\telse\n\t\troot[\"presentation-form\"] = factory(root[\"next-core-utilities\"], root[\"presentation-decorator\"], root[\"presentation-request\"], root[\"presentation-models\"], root[\"presentation-dom\"], root[\"presentation-widget\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { Widget } from \"presentation-widget\";\n\n/**\n * @function formCompile Creats the markup for the form\n * @param {string} name Name of the form\n * @param {string} description A description\n * @param {object} fields Object of fields with types (see JSON scheme properties format)\n * @param {object} model Data for the fields by key\n * @param {array} required Array of requires fields\n * @param {string} binding Name of the binding function\n * @param {array} display Array of fields to display\n * @param {Dom} nestedInput Dom tree of nested markup\n * @param {string} submitButton Name of the Submit button\n * @param {string} resetButton  Name of the reset button\n * @param {string} style Name of styles\n * @param {string} tagName Name of tag\n * @param {boolean} legacy Set old markup style\n * @returns {Dom} Dom tree of form elements\n */\nconst formCompile = (\n                      name,\n                      description,\n                      fields,\n                      model,\n                      required,\n                      binding,\n                      display,\n                      nestedInput,\n                      submitButton,\n                      resetButton,\n                      style,\n                      tagName,\n                      legacy = false,\n                      large = false\n                    ) => {\n  const form = document.createElement(tagName),\n        fs = document.createElement(\"fieldset\"),\n        keys = Object.keys(fields),\n        l = ((display) ? display.length: keys.length);\n  let t, i, input, lb, req;\n\n  if (style) {\n    const styles = style.split(\" \");\n    if (styles) {\n      for (i = 0; i < styles.length; i++) {\n        form.classList.add(styles[i]);\n      }\n    }\n  }\n\n  form.appendChild(fs);\n\n  if (name) {\n    const lg = document.createElement(\"legend\");\n    t = document.createTextNode(name);\n    if (description) {\n      const att = document.createAttribute(\"title\");\n      att.value = description;\n      lg.setAttributeNode(att);\n    }\n    lg.appendChild(t);\n    fs.appendChild(lg);\n  }\n\n  if (!display) {\n    display = keys;\n  }\n\n  let container;\n  for (i = 0; i < l; i++) {\n    let displayCol = true;\n    if (display) {\n      displayCol = (keys.indexOf(display[i]) !== -1) ? true : false;\n    }\n\n    if (displayCol) {\n      container = document.createElement(\"div\");\n      let css = \"input\";\n\n\n\n      req = (required.indexOf(display[i]) !== -1);\n      lb = document.createElement(\"label\");\n      lb.setAttribute(\"for\", display[i]);\n      t = document.createTextNode(fields[display[i]].description);\n      lb.appendChild(t);\n      input = Widget.Input(fields[display[i]], display[i], model[display[i]], display[i], req, binding);\n\n      /* set the css class to 'select' for better styles */\n      if (input.tagName === \"SELECT\" ) {\n        css = \"select\";\n      }\n\n      if (large) {\n        css += \" large\";\n      }\n      \n      container.setAttribute(\"class\", css);\n\n      input.setAttribute(\"placeholder\", display[i]);\n      if (nestedInput) {\n        if (input) {\n          lb.appendChild(input);\n        }\n        container.appendChild(lb);\n      } else if (legacy) {\n        container.appendChild(lb);\n        if (input) {\n          container.appendChild(input);\n        }\n      } else {\n        if (input) {\n          container.appendChild(input);\n        }\n        container.appendChild(lb);\n      }\n      fs.appendChild(container);\n    }\n  }\n\n  if (resetButton) {\n    const reset = document.createElement(\"button\");\n    reset.setAttribute(\"type\", \"reset\");\n    reset.setAttribute(`data-${binding}`, \"reset\");\n    reset.setAttribute(\"data-click\", \"reset\");\n    const t = document.createTextNode(resetButton);\n    reset.appendChild(t);\n    form.appendChild(reset);\n  }\n\n  if (submitButton) {\n    const submit = document.createElement(\"button\");\n    submit.setAttribute(\"type\", \"submit\");\n    submit.setAttribute(`data-${binding}`, \"submit\");\n    submit.setAttribute(\"data-click\", \"submit\");\n    const t = document.createTextNode(submitButton);\n    submit.appendChild(t);\n    form.appendChild(submit);\n  }\n  return form;\n};\n\nexport default formCompile;\n","import AutomaticForm from \"./autoForm.js\";\nimport formCompile from \"./functions/buildForm.js\";\n\nexport { AutomaticForm, formCompile };\n","import { isObject } from \"next-core-utilities\";\nimport { DecoratorView } from \"presentation-decorator\";\nimport { request } from \"presentation-request\";\nimport { Model } from \"presentation-models\";\nimport Dom from \"presentation-dom\";\nimport formCompile from \"./functions/buildForm.js\";\nimport formatValidationMessages from \"./functions/messages.js\";\n\n/**\n * A automatic form view created from a JSON Schema\n * <br/>\n *\n * Supported options:\n * <ul>\n * <li>schema - The JSON Schema for use with the UI and validation</li>\n * <li>data - prepopulate the model data</li>\n * <li>crossOrigin - Set CORS for the fetch</li>\n * <li>uri - the uri to fetch data from </li>\n * <li>title - the title of the form</li>\n * <li>description - set a tooltip for the form</li>\n * <li>display - Array of fields to display (others are hidden)</li>\n * <li>nestedInput - label wraps the input</li>\n * <li>submitButton - set the name of the submit button (binds to a submit method)</li>\n * <li>resetButton - set the name of the reset button (binds to a reset method)</li>\n * <li>legacy - set legacy rendering (older look and feel)</li>\n * <li>large - render large input fields</li>\n * </ul>\n * @param {Object} options Options for the class\n * @extends DecoratorView\n */\nclass AutomaticForm extends DecoratorView {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.tagName) {\n      options.tagName = \"form\";\n    }\n    super(options);\n    this.crossOrigin = false;\n    this._fields = {};\n    this.uri = null;\n    this.isInitalized = false;\n    this.title = null;\n    this.description = \"\";\n    this._required = [];\n    this.display = null;\n    this.nestedInput = false;\n    this.submitButton = false;\n    this.resetButton = false;\n    this.legacy = false;\n    this.large = false;\n\n    if (options.legacy) {\n      this.legacy = options.legacy;\n    }\n\n    if (options.large) {\n      this.large = options.large;\n    }\n\n    if (this.model && options && options.clearForm) {\n      this.model.clear();\n    } else if (!this.model) {\n      this.model = new Model();\n    }\n\n    if (options.submitButton) {\n      this.submitButton = options.submitButton;\n    }\n\n    if (options.resetButton) {\n      this.resetButton = options.resetButton;\n    }\n\n    if (options.nestedInput) {\n      this.nestedInput = options.nestedInput;\n    }\n\n    if (options.crossOrigin) {\n      this.crossOrigin = options.crossOrigin;\n    }\n    if (options.schema) {\n      // check if this is a schema vs a URI to get a schema\n      if (isObject(options.schema)) {\n        this.schema = options.schema;\n      } else {\n        // is a URI?\n        let parsedSchema = null;\n        try {\n          parsedSchema = JSON.parse(options.schema);\n          if (parsedSchema && isObject(parsedSchema)) {\n            this.schema = parsedSchema;\n          }\n        } catch(e) {\n          console.warn(`AUGMENTED: AutoForm \"${this.name}\" parsing string schema failed.  URI perhaps?`);\n        }\n        if (!this.schema) {\n          this._retrieveSchema(options.schema);\n          this.isInitalized = false;\n        }\n      }\n    }\n\n    if (options.el) {\n      this.el = options.el;\n    }\n\n    if (options.uri) {\n      this.uri = options.uri;\n    }\n\n    if (options.style) {\n      this.style = options.style;\n    } else {\n     this.style = \"material\";\n    }\n\n    if (options.data && (isObject(options.data))) {\n      this.model.set(options.data);\n    }\n    if (options.title) {\n      this.title = options.title;\n    }\n    if (options.description) {\n      this.description = options.description;\n    }\n\n    if (options.display) {\n      this.display = options.display;\n    }\n\n    if (this.model && this.uri) {\n      this.model.uri = this.uri;\n    }\n    if (this.model) {\n      this.model.crossOrigin = this.crossOrigin;\n    }\n    if (this.schema) {\n      if ((!this.name || this.name === \"\") && this.schema.title) {\n        this.name = this.schema.title;\n      }\n      if ((!this.description || this.description === \"\") && this.schema.description) {\n        this.description = this.schema.description;\n      }\n\n      if (this.schema.required) {\n        this._required = this.schema.required;\n      } else {\n        this._required = [];\n      }\n\n      if (!this.isInitalized) {\n        this._fields = this.schema.properties;\n        this.model.schema = this.schema;\n        this.isInitalized = true;\n      }\n    } else {\n      this.isInitalized = false;\n    }\n  };\n\n  /**\n   * The crossOrigin property - enables cross origin fetch\n   * @property {boolean} crossOrigin The crossOrigin property\n   */\n\n  /**\n   * The fields property\n   * @property {object} _fields The fields property\n   * @private\n   */\n\n  /**\n   * The URI property\n   * @property {string} uri The URI property\n   */\n\n  /**\n   * The model property\n   * @property {Model} model The model property\n   */\n\n  /**\n   * The initialized property\n   * @property {boolean} isInitalized The initialized property\n   */\n\n  /**\n   * The title property\n   * @property {string} title The title of the form\n   */\n\n  /**\n   * The name property\n   * @property {string} name The name of the form\n   */\n\n  /**\n   * The description property\n   * @property {string} description The description of the form\n   */\n\n  /**\n   * The required fields property\n   * @property {Array} _required The required fields\n   * @private\n   */\n\n  /**\n   * @property {array} display Fields to display - null will display all\n   */\n\n  /**\n   * @property {boolean} nestedInput Sets the input field as a chile of the label (defaults to false)\n   */\n\n  /**\n   * @property {string} submitButton The name of the submit button (defaults to null)\n   */\n\n  /**\n   * @property {string} resetButton The name of the reset button (defaults to null)\n   */\n\n  /**\n   * @property {boolean} legacy set legacy rendering\n   */\n\n  _retrieveSchema(uri) {\n    const that = this;\n    return request({\n      url: uri,\n      contentType: \"application/json\",\n      dataType: \"json\",\n      success: (data, status) => {\n        let schema = null;\n        if (typeof data === \"string\") {\n          schema = JSON.parse(data);\n        } else {\n          schema = data;\n        }\n        that.initialize({ \"schema\": schema });\n      },\n      error: (data, status) => {\n        console.error(`${this.name} Failed to fetch schema!`, status);\n      }\n    });\n  };\n\n  /**\n   * Sets the URI\n   * @param {string} uri The URI\n   * @deprecated Use property\n   */\n  setURI(uri) {\n    this.uri = uri;\n  };\n\n  /**\n   * Sets the schema\n   * @param {object} schema The JSON schema of the dataset\n   */\n  setSchema(schema) {\n    this.schema = schema;\n    this._fields = schema.properties;\n    this.model.reset();\n    this.model.schema = schema;\n\n    if (this.uri) {\n      model.uri = this.uri;\n    }\n  };\n\n  /**\n   * Enable/Disable the progress bar\n   * @param {boolean} show Show or Hide the progress bar\n   */\n  showProgressBar(show) {\n    if (this.el) {\n      const e = Dom.selector(this.el);\n      if (e) {\n        const p = e.querySelector(\"progress\");\n        if (p) {\n          p.style.display = (show) ? \"block\" : \"none\";\n          p.style.visibility = (show) ? \"visible\" : \"hidden\";\n        }\n      }\n    }\n  };\n\n  /**\n   * Show a message related to the form\n   * @param {string} message Some message to display\n   */\n  showMessage(message) {\n    if (this.el) {\n      const e = Dom.selector(this.el);\n      if (e) {\n        const p = e.querySelector(\"p[class=message]\");\n        if (p) {\n          p.innerHTML = message;\n        }\n      }\n    }\n  };\n\n  /**\n   * Validate the form\n   * @returns {boolean} Returns true on success of validation\n   */\n  validate() {\n    let messages = (this.model) ? this.model.validate() : null;\n    if (!this.model.isValid() && messages && messages.messages) {\n      this.showMessage(formatValidationMessages(messages.messages));\n    } else {\n      this.showMessage(\"\");\n    }\n    return messages;\n  };\n\n  /**\n   * Is the form valid\n   * @returns {boolean} Returns true if valid\n   */\n  isValid() {\n    return (this.model) ? this.model.isValid() : true;\n  };\n\n  /**\n   * Render the form\n   * @returns {object} Returns the view context ('this')\n   */\n  render() {\n    if (!this.isInitalized) {\n      console.warn(`${this.name} Can't render yet, not initialized!`);\n      return this;\n    }\n\n    this.template = null;//\"notused\";\n    this.showProgressBar(true);\n\n    if (this.el) {\n      const e = Dom.selector(this.el);\n      if (e) {\n        if (this.theme) {\n          Dom.addClass(e, this.theme);\n        }\n        // progress bar\n        let n = document.createElement(\"progress\"), t = document.createTextNode(\"Please wait.\");\n        n.appendChild(t);\n        e.appendChild(n);\n\n        // the form\n        const form = formCompile(\n          ((this.title) ? this.title : null),\n          this.description,\n          this._fields,\n          this.model.toJSON(),\n          this._required,\n          this.name,\n          this.display,\n          this.nestedInput,\n          this.submitButton,\n          this.resetButton,\n          this.style,\n          this.tagName,\n          this.legacy,\n          this.large\n        );\n        if (form) {\n          e.appendChild(form);\n        }\n        this._formEl = Dom.query(this.tagName, this.el);\n\n        // message\n        n = document.createElement(\"p\");\n        n.classList.add(\"message\");\n        e.appendChild(n);\n      }\n    } else {\n      console.warn(`${this.name} no element anchor, not rendering.`);\n      this.showProgressBar(false);\n      return this;\n    }\n\n    this.delegateEvents();\n    this.syncAllBoundElements();\n    this.showProgressBar(false);\n    return this;\n  };\n\n  /**\n   * Reset the form\n   * @returns {object} Returns the view context ('this')\n   */\n  reset() {\n    if (this._formEl) {\n      if (this._formEl.reset) {\n        this._formEl.reset();\n      }\n      this.model.reset();\n    }\n    return this;\n  };\n\n  /**\n   * Populate the form\n   * @param {object} data Data to fill in\n   * @returns {object} Returns the view context ('this')\n   */\n  populate(data) {\n    this.model.set(data);\n    return this;\n  };\n\n  /**\n   * Remove the form and all binds\n   */\n  remove() {\n    /* off to unbind the events */\n    this.undelegateEvents();\n    this.off();\n    this.stopListening();\n\n    Dom.empty(this.el);\n\n    return this;\n  };\n};\n\nexport default AutomaticForm;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","const formatValidationMessages = (messages) => {\n  let html = \"\";\n  if (messages && messages.length > 0) {\n    html = html + /*html*/`<ul class=\"errors\">`;\n    const l = messages.length;\n    let i = 0, ii = 0;\n    for (i = 0; i < l; i++) {\n      const ll = messages[i].errors.length;\n      for (ii = 0; ii < ll; ii++) {\n        html = html + /*html*/`<li>${messages[i].errors[ii]}</li>`;\n      }\n    }\n    html = html + /*html*/`</ul>`;\n  }\n  return html;\n};\n\nexport default formatValidationMessages;\n"],"sourceRoot":""}